# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License.

# build-client pipeline

name: $(Build.BuildId)

parameters:
- name: publishOverride
  displayName: Publish Override
  type: string
  default: default
  values:
    - default
    - skip
- name: releaseBuildOverride
  displayName: Release Build Override
  type: string
  default: none
  values:
    - none
    - prerelease
    - release

trigger:
  branches:
    include:
    - main
    - release/*
  paths:
    include:
    - packages
    - components
    - examples
    - package.json
    - package-lock.json
    - lerna.json
    - lerna-package-lock.json
    - tools/pipelines/build-client.yml
    - tools/pipelines/scripts/build-version.js
    - tools/pipelines/templates/build-npm-package.yml
    - tools/pipelines/templates/include-set-package-version.yml
    - tools/pipelines/templates/include-vars.yml
    - tools/pipelines/templates/include-publish-npm-package.yml
    - tools/pipelines/templates/include-publish-npm-package-steps.yml

pr:
  branches:
    include:
    - main
    - release/*
  paths:
    include:
    - packages
    - components
    - examples
    - package.json
    - package-lock.json
    - lerna.json
    - lerna-package-lock.json
    - tools/pipelines/build-client.yml
    - tools/pipelines/scripts/build-version.js
    - tools/pipelines/templates/build-npm-package.yml
    - tools/pipelines/templates/include-set-package-version.yml
    - tools/pipelines/templates/include-vars.yml

extends:
  template: templates/build-npm-package.yml
  parameters:
    publishOverride: ${{ parameters.publishOverride }}
    releaseBuildOverride: ${{ parameters.releaseBuildOverride }}
    buildDirectory: .
    tagName: client
    poolBuild: Main
    cgSubDirectory: packages
    checkoutSubmodules: true
    runBundleAnalysis: true

    preCG:
    - task: UseNode@1
      displayName: Use Node 12.x
      inputs:
        version: 12.x
    - task: Npm@1
      displayName: npm ci
      inputs:
        command: 'custom'
        customCommand: 'ci --ignore-scripts'
        customRegistry: 'useNpmrc'
    - task: Bash@3
      displayName: 'Generate Mono repo package json'
      inputs:
        targetType: 'inline'
        script: |
          # Generate the package/package lock for the lerna project so we would scan it.
          node node_modules/@fluidframework/build-tools/dist/genMonoRepoPackageJson/genMonoRepoPackageJson.js
          cp repo-package.json packages/package.json
          cp repo-package-lock.json packages/package-lock.json

    postBuildJobs:
    - ${{ if ne(variables['Build.Reason'], 'PullRequest') }}:
      # TODO: Move to a template to be more concise here?
      - job: PostCheckinTests
        displayName: Run Post-Checkin Tests
        pool: Main
        steps:
          # TODO: Share code with include-publish-npm-package-steps.yml?
          - download: current
            artifact: pack
          - task: UseNode@1
            displayName: Use Node 12.x
            inputs: 
              version: 12.x
          - task: Bash@3
            displayName: Generate .npmrc
            inputs:
              targetType: 'inline'
              workingDirectory: $(Pipeline.Workspace)/pack
              ${{ if eq(parameters.namespace, true) }}:
                script: |
                  echo Generating .npmrc for https://registry.npmjs.org
                  echo "@fluidframework:registry=https://registry.npmjs.org" >> ./.npmrc
                  echo "@fluid-example:registry=https://registry.npmjs.org" >> ./.npmrc
                  echo "@fluid-internal:registry=https://registry.npmjs.org" >> ./.npmrc
                  echo "always-auth=true" >> ./.npmrc
                  cat .npmrc
              ${{ if eq(parameters.namespace, false) }}:
                script: |
                  echo Generating .npmrc for https://registry.npmjs.org
                  echo "registry=https://registry.npmjs.org" >> ./.npmrc
                  echo "always-auth=true" >> ./.npmrc
                  cat .npmrc
          - task: npmAuthenticate@0
            displayName: npm Authenticate
            inputs:
              workingFile: $(Pipeline.Workspace)/pack/.npmrc
              customEndPoint: npmjs

          # Run the tests
          - task: Npm@1
            displayName: npm run ci:test:realsvc
            env:
              fluid__webpack__bearerSecret: $(fluid__webpack__bearerSecret)
              fluid__webpack__fluidHost: $(fluid__webpack__fluidHost)
              fluid__webpack__tenantId: $(fluid__webpack__tenantId)
              fluid__webpack__tenantSecret: $(fluid__webpack__tenantSecret)
            inputs:
              command: 'custom'
              workingDir: packages/test/end-to-end-tests
              customCommand: 'run ci:test:realsvc'

          # Publish the results
          - task: PublishTestResults@2
            displayName: Publish Post-Checkin Test Results
            inputs:
              testResultsFormat: 'JUnit'
              testResultsFiles: '**/*junit-report.xml'
              searchFolder: packages/test/end-to-end-tests/nyc-post
              mergeTestResults: true
            condition: succeededOrFailed()
